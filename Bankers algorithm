#include <stdio.h>
#include <stdbool.h>

void calculateNeed(int need[][10], int max[][10], int allot[][10], int P, int R) {
    for (int i = 0; i < P; i++)
        for (int j = 0; j < R; j++)
            need[i][j] = max[i][j] - allot[i][j];
}

bool isSafe(int processes[], int avail[], int max[][10], int allot[][10], int P, int R) {
    int need[10][10];
    int finish[10] = {0};
    int safeSeq[10];
    int work[10];

    calculateNeed(need, max, allot, P, R);

    for (int i = 0; i < R; i++)
        work[i] = avail[i];

    int count = 0;
    while (count < P) {
        bool found = false;
        for (int p = 0; p < P; p++) {
            if (finish[p] == 0) {
                int j;
                for (j = 0; j < R; j++)
                    if (need[p][j] > work[j])
                        break;

                if (j == R) {
                    for (int k = 0; k < R; k++)
                        work[k] += allot[p][k];
                    safeSeq[count++] = p;
                    finish[p] = 1;
                    found = true;
                }
            }
        }

        if (found == false) {
            printf("System is not in a safe state\n");
            return false;
        }
    }

    printf("System is in a safe state.\nSafe sequence is: ");
    for (int i = 0; i < P; i++)
        printf("%d ", safeSeq[i]);
    printf("\n");

    return true;
}

int main() {
    int P, R;
    int processes[10];
    int avail[10];
    int max[10][10];
    int allot[10][10];

    printf("Enter the number of processes: ");
    scanf("%d", &P);

    printf("Enter the number of resources: ");
    scanf("%d", &R);

    printf("Enter the available resources for each type: ");
    for (int i = 0; i < R; i++)
        scanf("%d", &avail[i]);

    printf("Enter the maximum demand matrix:\n");
    for (int i = 0; i < P; i++) {
        processes[i] = i; 
        printf("For process %d: ", i);
        for (int j = 0; j < R; j++)
            scanf("%d", &max[i][j]);
    }

    printf("Enter the allocation matrix:\n");
    for (int i = 0; i < P; i++) {
        printf("For process %d: ", i);
        for (int j = 0; j < R; j++)
            scanf("%d", &allot[i][j]);
    }

    isSafe(processes, avail, max, allot, P, R);

    return 0;
}
